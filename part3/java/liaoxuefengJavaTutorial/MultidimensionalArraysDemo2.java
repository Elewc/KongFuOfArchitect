public class MultidimensionalArraysDemo2 {
    /**
     * 因为ns包含3个数组，因此，ns.length为3。实际上ns在内存中的结构如下：
     *
     *                     ┌───┬───┬───┬───┐
     *          ┌───┐  ┌──>│ 1 │ 2 │ 3 │ 4 │
     * ns ─────>│░░░│──┘   └───┴───┴───┴───┘
     *          ├───┤      ┌───┬───┬───┬───┐
     *          │░░░│─────>│ 5 │ 6 │ 7 │ 8 │
     *          ├───┤      └───┴───┴───┴───┘
     *          │░░░│──┐   ┌───┬───┬───┬───┐
     *          └───┘  └──>│ 9 │10 │11 │12 │
     *                     └───┴───┴───┴───┘
     * 如果我们定义一个普通数组arr0，然后把ns[0]赋值给它：
     *
     * 实际上arr0就获取了ns数组的第0个元素。因为ns数组的每个元素也是一个数组，因此，arr0指向的数组就是{ 1, 2, 3, 4 }。在内存中，结构如下：
     *
     *             arr0 ─────┐
     *                       ▼
     *                     ┌───┬───┬───┬───┐
     *          ┌───┐  ┌──>│ 1 │ 2 │ 3 │ 4 │
     * ns ─────>│░░░│──┘   └───┴───┴───┴───┘
     *          ├───┤      ┌───┬───┬───┬───┐
     *          │░░░│─────>│ 5 │ 6 │ 7 │ 8 │
     *          ├───┤      └───┴───┴───┴───┘
     *          │░░░│──┐   ┌───┬───┬───┬───┐
     *          └───┘  └──>│ 9 │10 │11 │12 │
     *                     └───┴───┴───┴───┘
     * 访问二维数组的某个元素需要使用array[row][col]，例如：
     * */
    public static void main(String[] args) {
        int[][] ns = {
                { 1, 2, 3, 4 },
                { 5, 6, 7, 8 },
                { 9, 10, 11, 12 }
        };
        int[] arr0 = ns[0];
        System.out.println(arr0.length); // 4
    }
}
